name: 'PL/KM'

env:
  PROJECT_NAME: twdu-germany
  MODULE_NAME: pl-km-test

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  base:
    name: 'Base Terraform'
    runs-on: self-hosted
    environment: production
    container:
      image: docker.pkg.github.com/kelseymok/terraform-workspace/terraform-workspace:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Assume Role
      run: assume-role twdu-germany-github-runner-aws

    - name: Terraform Init & Apply
      run: |
        cd base && \
        terraform init -backend-config="workspace_key_prefix=${MODULE_NAME}" && \
        terraform apply -var-file=variables.tfvars -auto-approve
  data-ingestion:
    name: 'Data Ingestion'
    runs-on: self-hosted
    environment: production
    needs: ["base"]
    container:
      image: docker.pkg.github.com/kelseymok/terraform-workspace/terraform-workspace:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Assume Role
        run: assume-role twdu-germany-github-runner-aws

      - name: Terraform Init & Apply
        run: |
          cd data-ingestion && \
          terraform init && \
          terraform apply -var-file=variables.tfvars -auto-approve

  data-transformation:
    name: 'Data Transformation'
    runs-on: self-hosted
    environment: production
    needs: [ "base" ]
    container:
      image: docker.pkg.github.com/kelseymok/terraform-workspace/terraform-workspace:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Assume Role
        run: assume-role twdu-germany-github-runner-aws

      - name: Terraform Init & Apply
        run: |
          cd data-transformation && \
          terraform init && \
          terraform apply -var-file=variables.tfvars -auto-approve
